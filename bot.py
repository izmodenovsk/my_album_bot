import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import WebAppInfo
from aiohttp import web
import asyncio

API_TOKEN = os.getenv("BOT_TOKEN", "–¢–û–ö–ï–ù_–¢–í–û–ï–ì–û_–ë–û–¢–ê")
CHANNEL_ID = -1002365418629  # –∑–∞–º–µ–Ω–∏ –Ω–∞ id —Ç–≤–æ–µ–≥–æ –∫–∞–Ω–∞–ª–∞

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ñ–∞–π–ª–æ–≤ (–≤ –ø–∞–º—è—Ç–∏)
album = []


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ
@dp.message_handler(content_types=["photo"])
async def handle_photo(message: types.Message):
    file_id = message.photo[-1].file_id
    album.append({"type": "photo", "file_id": file_id})
    await bot.send_photo(CHANNEL_ID, file_id, caption=f"–û—Ç {message.from_user.first_name}")
    await message.answer("–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –∞–ª—å–±–æ–º üì∏")


# –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
@dp.message_handler(content_types=["video"])
async def handle_video(message: types.Message):
    file_id = message.video.file_id
    album.append({"type": "video", "file_id": file_id})
    await bot.send_video(CHANNEL_ID, file_id, caption=f"–û—Ç {message.from_user.first_name}")
    await message.answer("–í–∏–¥–µ–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –∞–ª—å–±–æ–º üé¨")


# –∫–Ω–æ–ø–∫–∞ "–û—Ç–∫—Ä—ã—Ç—å –∞–ª—å–±–æ–º"
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(types.KeyboardButton("–û—Ç–∫—Ä—ã—Ç—å –∞–ª—å–±–æ–º", web_app=WebAppInfo(url="https://izmodenovsk.github.io/my_album_bot/")))
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤–ª—è–π —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ ‚Äî —è —Å–æ—Ö—Ä–∞–Ω—é –∏—Ö –≤ –∞–ª—å–±–æ–º–µ.", reply_markup=kb)


# ==============================
#   API-—Å–µ—Ä–≤–µ—Ä (aiohttp)
# ==============================
async def handle_album(request):
    results = []
    for item in album:
        file = await bot.get_file(item["file_id"])
        file_url = f"https://api.telegram.org/file/bot{API_TOKEN}/{file.file_path}"
        results.append({"type": item["type"], "url": file_url})
    return web.json_response(results)


async def on_startup(app):
    # –ó–∞–ø—É—Å–∫–∞–µ–º aiogram –≤–Ω—É—Ç—Ä–∏ aiohttp
    loop = asyncio.get_event_loop()
    loop.create_task(dp.start_polling())


def create_app():
    app = web.Application()
    app.router.add_get("/album", handle_album)
    app.on_startup.append(on_startup)
    return app


if __name__ == "__main__":
    web.run_app(create_app(), host="0.0.0.0", port=int(os.getenv("PORT", 8080)))
